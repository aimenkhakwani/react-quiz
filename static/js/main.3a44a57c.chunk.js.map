{"version":3,"sources":["assets sync /^/.//.*$","assets/aztec-commoner.jpg","assets/aztec-nobles.jpg","assets/aztec-warrior.jpg","data/quizQuestions.js","data/quizResults.js","components/Question.js","components/AnswerOption.js","components/Quiz.js","components/Result.js","App.js","serviceWorker.js","index.js"],"names":["map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports","quizQuestions","question","answers","type","content","quizResults","title","result","img","Question","props","className","AnswerOption","name","checked","answerType","answer","value","disabled","onChange","onAnswerSelected","htmlFor","answerContent","Quiz","answerOptions","key","questionId","Result","quizTitle","quizResult","src","require","imgSrc","alt","App","state","counter","endResult","handleAnswerSelected","bind","shuffledAnswerOptions","shuffleArray","this","setState","array","temporaryValue","randomIndex","currentIndex","length","Math","floor","random","ans","res","event","setUserAnswer","currentTarget","setTimeout","setNextQuestion","setResults","renderResult","renderQuiz","Component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.3a44a57c.chunk.js","sourcesContent":["var map = {\n\t\"./aztec-commoner.jpg\": 15,\n\t\"./aztec-nobles.jpg\": 16,\n\t\"./aztec-warrior.jpg\": 17\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 14;","module.exports = __webpack_public_path__ + \"static/media/aztec-commoner.8fe064ce.jpg\";","module.exports = __webpack_public_path__ + \"static/media/aztec-nobles.2fca00ee.jpg\";","module.exports = __webpack_public_path__ + \"static/media/aztec-warrior.d3a3bf61.jpg\";","var quizQuestions = [\n  {\n    question: \"Choose an ancient culture:\",\n    answers: [\n      {\n        type: \"aztec\",\n        content: \"Aztecs\"\n      },\n      {\n        type: \"mesopotamian\",\n        content: \"Mesopotamia\"\n      },\n    ]\n  },\n  {\n    question: \"What is your social status?\",\n    answers: [\n      {\n        type: \" nobleman\",\n        content: \"Nobleman\"\n      },\n      {\n        type: \" warrior\",\n        content: \"Warrior\"\n      },\n      {\n        type: \" commoner\",\n        content: \"Commoner\"\n      }\n    ]\n  }\n];\n\nexport default quizQuestions;\n","var quizResults = [\n  {\n    title: \"You are: a nobleman!\",\n    result: \"Congrats! You are a tlatoani (noble) in the Aztec world. Although you and your fellow noblemen are only 5 - 10% of the population, you run the government, own land, and command the the army! \" +\n      \"You also get to wear luxurious capes and jewelry that is limited for your class only. As a tlatoani, you have all the land in your city-sate. However, that can be a lot to maintain. So you can grant some \" +\n      \"estates to tetecuhtin (high lords) or to temples. These will then be maintained by them, and passed on to their families. You also have several pipiltin (regular nobles) who live in your palace and serve you. \" +\n      \"And of course, the commoners exist to serve you. So all in all, life is good!\",\n    img: \"aztec-nobles.jpg\"\n  },\n  {\n    title: \"You are: a warrior!\",\n    result: \"Hello! You are a warrior in the Aztec world. Born a commoner, you attended telpochcalli (school for common youth), and that is where you received your military training. Fully trained warriors are ranked by the number of enemy soldiers they capture. \" +\n      \"When you first became a soldier, you could only wear plain clothes without any jewelery. Luckily, you are a excellent warrior who has taken many captives and have joined an elite military order, the eagle warriors! Therefore, you now have many privileges. You are permitted to wear fine jewelry (such as headbands and lip plugs), \" +\n      \"dance at ceremonies, and dine at the palace! These advancements in your status are a product of hard work, and a source of pride for your family!\",\n    img: \"aztec-warrior.jpg\"\n  },\n  {\n    title: \"You are: a commoner!\",\n    result: \"Hello! You are a macehualli (commoner) in the Aztec world. No worries though! Although you serve a noble lord, you do not lead a life of subjugation. As a pochteca (merchant) \" +\n      \"you have more freedom than most commoners! However, it is time for your family's turn in paying your lord tequitl. Tequitl is payments of goods, such as food and items your family has produced, \" +\n      \"as well as labor service. All commoner families take turns with providing these duties, and for the next three weeks its your turn. So head on over to his estate, and don't forget to take the payments.\",\n    img: \"aztec-commoner.jpg\"\n  },\n  {\n    title: \"You are: a warrior!\",\n    result: \"CONGRATS! you're a mesopotamian nobleman!\",\n    img: \"aztec-nobles.jpg\"\n  },\n  {\n    title: \"You are: a warrior!\",\n    result: \"CONGRATS! you're a mesopotamian warrior!\",\n    img: \"aztec-nobles.jpg\"\n  },\n  {\n    title: \"You are: a warrior!\",\n    result: \"CONGRATS! you're a mesopotamian commoner!\",\n    img: \"aztec-nobles.jpg\"\n  },\n];\n\nexport default quizResults;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nfunction Question(props) {\n  return (\n    <h2 className=\"react-quiz__question\">{props.content}</h2>\n  );\n}\n\nQuestion.propTypes = {\n  content: PropTypes.string.isRequired\n};\n\nexport default Question;","import React from 'react';\nimport PropTypes from 'prop-types';\n\nfunction AnswerOption(props) {\n  return (\n    <li className=\"react-quiz__answer-option\">\n      <input\n        type=\"radio\"\n        className=\"react-quiz__radio-button\"\n        name=\"radioGroup\"\n        checked={props.answerType === props.answer}\n        id={props.answerType}\n        value={props.answerType}\n        disabled={props.answer}\n        onChange={props.onAnswerSelected}\n      />\n      <label className=\"react-quiz__radio-label\" htmlFor={props.answerType}>\n        {props.answerContent}\n      </label>\n    </li>\n  );\n}\n\nAnswerOption.propTypes = {\n  answerType: PropTypes.string.isRequired,\n  answerContent: PropTypes.string.isRequired,\n  answer: PropTypes.string.isRequired,\n  onAnswerSelected: PropTypes.func.isRequired\n};\n\nexport default AnswerOption;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Question from '../components/Question';\n// import QuestionCount from '../components/QuestionCount';\nimport AnswerOption from '../components/AnswerOption';\n\nfunction Quiz(props) {\n  function renderAnswerOptions(key) {\n    return (\n      <AnswerOption\n        key={key.content}\n        answerContent={key.content}\n        answerType={key.type}\n        answer={props.answer}\n        questionId={props.questionId}\n        onAnswerSelected={props.onAnswerSelected}\n      />\n    );\n  }\n\n  return (\n    <div className=\"react-quiz__quiz\">\n      <Question content={props.question} />\n      <ul className=\"react-quiz__answer-options\">\n        {props.answerOptions.map(renderAnswerOptions)}\n      </ul>\n    </div>\n  );\n}\n\nQuiz.propTypes = {\n  answer: PropTypes.string.isRequired,\n  answerOptions: PropTypes.array.isRequired,\n  counter: PropTypes.number.isRequired,\n  question: PropTypes.string.isRequired,\n  questionId: PropTypes.number.isRequired,\n  questionTotal: PropTypes.number.isRequired,\n  onAnswerSelected: PropTypes.func.isRequired\n};\n\nexport default Quiz;","import React from 'react';\nimport PropTypes from 'prop-types';\n\nfunction Result(props) {\n  return (\n    <div className=\"react-quiz__result\">\n      <h2 className=\"react-quiz__result-title\">{props.quizTitle}</h2>\n      {props.quizResult}\n      <div className=\"react-quiz__result-img\">\n        <img src={require(`../assets/${props.imgSrc}`)} className=\"react-quiz__img\" alt=\"alt text\" />\n      </div>\n    </div>\n  );\n}\n\nResult.propTypes = {\n  quizResult: PropTypes.string.isRequired,\n  imgSrc: PropTypes.string.isRequired,\n  quizTitle: PropTypes.string.isRequired\n};\n\nexport default Result;","import React, { Component } from 'react';\nimport quizQuestions from './data/quizQuestions';\nimport quizResults from './data/quizResults';\nimport Quiz from './components/Quiz';\nimport Result from './components/Result';\nimport './App.scss';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      counter: 0,\n      questionId: 1,\n      question: '',\n      answerOptions: [],\n      result: '',\n      endResult: '',\n    };\n\n    this.handleAnswerSelected = this.handleAnswerSelected.bind(this);\n  }\n\n  componentDidMount() {\n    const shuffledAnswerOptions = quizQuestions.map((question) => this.shuffleArray(question.answers));\n\n    this.setState({\n      question: quizQuestions[0].question,\n      answerOptions: shuffledAnswerOptions[0]\n    });\n  }\n\n  shuffleArray(array) {\n    var currentIndex = array.length, temporaryValue, randomIndex;\n\n    // While there remain elements to shuffle...\n    while (0 !== currentIndex) {\n\n      // Pick a remaining element...\n      randomIndex = Math.floor(Math.random() * currentIndex);\n      currentIndex -= 1;\n\n      // And swap it with the current element.\n      temporaryValue = array[currentIndex];\n      array[currentIndex] = array[randomIndex];\n      array[randomIndex] = temporaryValue;\n    }\n\n    return array;\n  };\n\n  setNextQuestion() {\n    const counter = this.state.counter + 1;\n    const questionId = this.state.questionId + 1;\n    this.setState({\n      counter: counter,\n      questionId: questionId,\n      question: quizQuestions[counter].question,\n      answerOptions: quizQuestions[counter].answers,\n      answer: ''\n    });\n  }\n\n  setUserAnswer(answer) {\n    this.setState((state) => ({\n      result: this.state.result + answer\n    }));\n  }\n\n  setResults () {\n    const ans = this.state.result;\n    let res = '';\n    if (ans === 'aztec nobleman') {\n      res = [\n        quizResults[0].title,\n        quizResults[0].result,\n        quizResults[0].img\n      ];\n    }\n    if (ans === 'aztec warrior') {\n      res = [\n        quizResults[1].title,\n        quizResults[1].result,\n        quizResults[1].img\n      ];\n    }\n    if (ans === 'aztec commoner') {\n      res = [\n        quizResults[2].title,\n        quizResults[2].result,\n        quizResults[2].img\n      ];\n    }\n    if (ans === 'mesopotamian nobleman') {\n      res = [\n        quizResults[3].title,\n        quizResults[3].result,\n        quizResults[3].img\n      ];\n    }\n    if (ans === 'mesopotamian warrior') {\n      res = [\n        quizResults[4].title,\n        quizResults[4].result,\n        quizResults[4].img\n      ];\n    }\n    if (ans === 'mesopotamian commoner') {\n      res = [\n        quizResults[5].title,\n        quizResults[5].result,\n        quizResults[5].img\n      ];\n    }\n    this.setState({ endResult: res });\n  }\n\n  handleAnswerSelected(event) {\n    this.setUserAnswer(event.currentTarget.value);\n    if (this.state.questionId < quizQuestions.length) {\n      setTimeout(() => this.setNextQuestion(), 300);\n    } else {\n      setTimeout(() => this.setResults(), 300);\n    }\n  }\n\n  renderQuiz() {\n    return (\n      <Quiz\n        answer={this.state.answer}\n        answerOptions={this.state.answerOptions}\n        questionId={this.state.questionId}\n        question={this.state.question}\n        onAnswerSelected={this.handleAnswerSelected}\n      />\n    );\n  }\n\n  renderResult() {\n    return (\n      <Result\n        quizTitle={this.state.endResult[0]}\n        quizResult={this.state.endResult[1]}\n        imgSrc={this.state.endResult[2]}\n      />\n    );\n  }\n\n  render() {\n    return (\n      <div className=\"react-quiz\">\n        <div className=\"react-quiz__header\">\n          <h1 className=\"react-quiz__title\">Humanities Quiz</h1>\n        </div>\n        {this.state.endResult ? this.renderResult() : this.renderQuiz()}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}